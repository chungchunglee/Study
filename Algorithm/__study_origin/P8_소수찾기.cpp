/*https://programmers.co.kr/learn/courses/30/lessons/42839
* 소수 찾기
문제 설명
한자리 숫자가 적힌 종이 조각이 흩어져있습니다. 흩어진 종이 조각을 붙여 소수를 몇 개 만들 수 있는지 알아내려 합니다.

각 종이 조각에 적힌 숫자가 적힌 문자열 numbers가 주어졌을 때, 종이 조각으로 만들 수 있는 소수가 몇 개인지 return 하도록 solution 함수를 완성해주세요.

제한사항
numbers는 길이 1 이상 7 이하인 문자열입니다.
numbers는 0~9까지 숫자만으로 이루어져 있습니다.
"013"은 0, 1, 3 숫자가 적힌 종이 조각이 흩어져있다는 의미입니다.
입출력 예
numbers	return
"17"	3
"011"	2
입출력 예 설명
예제 #1
[1, 7]으로는 소수 [7, 17, 71]를 만들 수 있습니다.

예제 #2
[0, 1, 1]으로는 소수 [11, 101]를 만들 수 있습니다.

11과 011은 같은 숫자로 취급합니다.
*/
#include <string>
#include <vector>

using namespace std;

vector<int> check_pNum(vector<int> input)
{
    vector<int> answer;
    for(int j = 0; j < input.size(); j++)
    {
        bool bP = true;
        for (int i = 2; i < input[0] / 2; i++)
        {
            if (input[i] % i != 0)
            {
                bP = false;
                break;
            }
        }
        if (bP) answer.push_back(input[i]);
    }
}


int solution(string numbers) {
    int answer = 0;
    vector<int> numbers_i(numbers.size());

    for (int i = 0; i < numbers.size(); i++)
        numbers_i[i] = numbers[i] - '0';

    vector<int> numbers_c;
    //순열을 이용한 

    return answer;
}